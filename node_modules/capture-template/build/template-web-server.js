"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var web_server_1 = require("./web-server");
var inflate_template_1 = require("inflate-template");
var fs = require("fs-extra");
var path = require("path");
var promisify = require('promisify-any');
/**
 * This component is responsible for expanding a web page template, filling out the web page's data and starting a web server.
 */
var TemplateWebServer = /** @class */ (function () {
    function TemplateWebServer(inflateOptions, log) {
        /**
         * For performance reasons this can be reused to instantiate and render multiple web pages.
         */
        this.webServer = null;
        /**
         * Template configuration, once web server is started and template has been inflated.
         */
        this.templateConfig = null;
        this.inflateOptions = inflateOptions;
        this.log = log;
    }
    /**
     * Get the URL to access the web-sever.
     */
    TemplateWebServer.prototype.getUrl = function () {
        return this.webServer.getUrl();
    };
    /**
     * Get the options for the template.
     */
    TemplateWebServer.prototype.getTemplateConfig = function () {
        if (!this.templateConfig) {
            throw new Error("Template web server is not started, please call 'start'.");
        }
        return this.templateConfig;
    };
    /**
     * Start the web page renderer.
     * For performance reasons this can be reused to render multiple pages.
     */
    TemplateWebServer.prototype.start = function (templatePath, data, port) {
        return __awaiter(this, void 0, void 0, function () {
            var templateConfigFilePath, templateConfigContent, err_1, template;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this.templateConfig) {
                            throw new Error("Template web server is already started. Please end the previous session by calling 'end'.");
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        templateConfigFilePath = path.join(templatePath, "template.json");
                        return [4 /*yield*/, promisify(fs.readFile)(templateConfigFilePath, "utf8")];
                    case 2:
                        templateConfigContent = _a.sent();
                        this.templateConfig = JSON.parse(templateConfigContent);
                        return [3 /*break*/, 4];
                    case 3:
                        err_1 = _a.sent();
                        console.error("Failed to load template configuration.");
                        console.error(err_1 && err_1.stack || err_1);
                        throw new Error("Template configuration file 'template.json' was not found in the template directory '" + templatePath + "'.");
                    case 4:
                        if (!this.templateConfig.waitSelector ||
                            typeof (this.templateConfig.waitSelector) !== "string") {
                            throw new Error("Error in template configuration 'template.json' for template in directory '" + templatePath + "'. Please set 'waitSelector' to a valid CSS selector that designates the element in the DOM to wait before before invoking the capture.");
                        }
                        return [4 /*yield*/, inflate_template_1.inflateTemplate(templatePath, data, this.inflateOptions)];
                    case 5:
                        template = _a.sent();
                        this.webServer = new web_server_1.WebServer(port);
                        return [4 /*yield*/, this.webServer.start(data, template)];
                    case 6:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Finish the chart renderer.
     */
    TemplateWebServer.prototype.end = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.templateConfig = null;
                        if (!this.webServer) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.webServer.stop()];
                    case 1:
                        _a.sent();
                        this.webServer = null;
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    return TemplateWebServer;
}());
exports.TemplateWebServer = TemplateWebServer;
//# sourceMappingURL=template-web-server.js.map