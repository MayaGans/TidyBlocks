import { IInflateOptions } from "inflate-template";
/**
 * Allows caller to override logging.
 */
export interface ILog {
    /**
     * Log an info message.
     */
    info(msg: string): void;
    /**
     * Log a warning message.
     */
    warn(msg: string): void;
    /**
     * Log an error message.
     */
    error(msg: string): void;
}
/**
 * Environment variables to pass in when starting the Electrong process required for capturing.
 */
export interface IEnvVars {
    [index: string]: string;
}
/**
 * Specifies options that can be passed to the capture function.
 */
export interface ICaptureOptions {
    /**
     * Options use when inflating the template.
     */
    inflateOptions?: IInflateOptions;
    /**
     * Optionally override logging.
     */
    log?: ILog;
    /**
     * Optional timeout for Electron's wait function.
     */
    waitTimeout?: number;
    /**
     * Optional timeout for Electron's goto function.
     */
    gotoTimeout?: number;
    /**
     * Opens Electron's devtools, this only helps if show browser is also enabled!
     */
    openDevTools?: boolean;
    /**
     * Set to true to show the headless browser.
     */
    showBrowser?: boolean;
    /**
     * Set to true to leave the browser open.
     * Note that this causes a hang so don't ever use it in production, it's only
     * here for debugging.
     */
    leaveBrowserOpen?: boolean;
    /**
     * Specify the path to Electron if that's necessary for you.
     */
    electronPath?: string;
    /**
     * Environment variables to pass in when starting the Electrong process required for capturing.
     */
    env?: IEnvVars;
}
export declare function captureImage(templatePath: string, data: any, outputPath: string, options?: ICaptureOptions): Promise<void>;
export declare function capturePDF(templatePath: string, data: any, outputPath: string, options?: ICaptureOptions): Promise<void>;
