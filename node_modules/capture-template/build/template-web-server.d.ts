import { IInflateOptions } from "inflate-template";
import { ILog } from "./index";
/**
 * Interface to the template renderer.
 * This component is responsible for expanding a web page template, filling out the web page's data and starting a web server.
 */
export interface ITemplateWebServer {
    /**
     * Get the URL to access the web-sever.
     */
    getUrl(): string;
    /**
     * Get the options for the template.
     */
    getTemplateConfig(): any;
    /**
     * Start the template renderer.
     * For performance reasons this can be reused to instantiate and render multiple web pages.
     */
    start(templatePath: string, data: any, port: number): void;
    /**
     * Finish the chart renderer.
     */
    end(): Promise<void>;
}
/**
 * This component is responsible for expanding a web page template, filling out the web page's data and starting a web server.
 */
export declare class TemplateWebServer implements ITemplateWebServer {
    /**
     * Optinally override logging.
     */
    private log?;
    /**
     * For performance reasons this can be reused to instantiate and render multiple web pages.
     */
    private webServer;
    /**
     * Template configuration, once web server is started and template has been inflated.
     */
    private templateConfig;
    /**
     * Options for inflating the tempalte.
     */
    private inflateOptions?;
    constructor(inflateOptions?: IInflateOptions, log?: ILog);
    /**
     * Get the URL to access the web-sever.
     */
    getUrl(): string;
    /**
     * Get the options for the template.
     */
    getTemplateConfig(): any;
    /**
     * Start the web page renderer.
     * For performance reasons this can be reused to render multiple pages.
     */
    start(templatePath: string, data: any, port: number): Promise<void>;
    /**
     * Finish the chart renderer.
     */
    end(): Promise<void>;
}
