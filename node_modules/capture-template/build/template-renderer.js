"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var web_page_renderer_1 = require("./web-page-renderer");
var template_web_server_1 = require("./template-web-server");
/**
 * This component is responsible for pretty much everything, coordinates inflating a template, starting a web server, starting Nightmare
 * navigating to the web page and then capturing the web page to a PNG or PDF.
 */
var TemplateRenderer = /** @class */ (function () {
    function TemplateRenderer(options) {
        /**
         * Renders the web page.
         */
        this.webPageRenderer = null;
        /**
         * Hosts the templated web page to be rendered.
         */
        this.templateWebServer = null;
        this.options = options;
    }
    /**
     * Get the URL to access the web-sever.
     */
    TemplateRenderer.prototype.getUrl = function () {
        return this.templateWebServer.getUrl();
    };
    /**
     * Start the template renderer.
     * For performance reasons the template render can be reused to render multiple web pages.
     */
    TemplateRenderer.prototype.start = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.webPageRenderer = new web_page_renderer_1.WebPageRenderer(this.options);
                        return [4 /*yield*/, this.webPageRenderer.start()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Finish the template renderer.
     */
    TemplateRenderer.prototype.end = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.unloadTemplate()];
                    case 1:
                        _a.sent();
                        if (!this.webPageRenderer) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.webPageRenderer.end()];
                    case 2:
                        _a.sent();
                        this.webPageRenderer = null;
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Load a template render for rendering.
     *
     * @param templatePath The path to the template.
     */
    TemplateRenderer.prototype.loadTemplate = function (templatePath, data, port) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.unloadTemplate();
                        this.templateWebServer = new template_web_server_1.TemplateWebServer(this.options && this.options.inflateOptions, this.options && this.options.log);
                        return [4 /*yield*/, this.templateWebServer.start(templatePath, data, port)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Unload current template when we are done.
     */
    TemplateRenderer.prototype.unloadTemplate = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.templateWebServer) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.templateWebServer.end()];
                    case 1:
                        _a.sent();
                        this.templateWebServer = null;
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    //
    // Check current setup prior to doing any rendering.
    //
    TemplateRenderer.prototype.preRenderCheck = function () {
        if (!this.webPageRenderer) {
            throw new Error("TemplateRenderer is not started, please call 'start' to initiate.");
        }
        if (!this.templateWebServer) {
            throw new Error("TemplateRenderer: No template is loaded, please call 'loadTemplate'.");
        }
    };
    /**
     * Render the current web page template to an image file.
     */
    TemplateRenderer.prototype.renderImage = function (outputFilePath) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.preRenderCheck();
                        return [4 /*yield*/, this.webPageRenderer.renderImage(this.templateWebServer.getUrl(), outputFilePath, this.templateWebServer.getTemplateConfig())];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Render the current web page template to a PDF file.
     */
    TemplateRenderer.prototype.renderPDF = function (outputFilePath) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.preRenderCheck();
                        return [4 /*yield*/, this.webPageRenderer.renderPDF(this.templateWebServer.getUrl(), outputFilePath, this.templateWebServer.getTemplateConfig())];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return TemplateRenderer;
}());
exports.TemplateRenderer = TemplateRenderer;
//# sourceMappingURL=template-renderer.js.map