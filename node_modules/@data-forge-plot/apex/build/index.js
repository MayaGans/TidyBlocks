(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var format_chart_def_1 = __webpack_require__(/*! ./lib/format-chart-def */ "./src/lib/format-chart-def.ts");
var format_chart_def_2 = __webpack_require__(/*! ./lib/format-chart-def */ "./src/lib/format-chart-def.ts");
exports.formatChartDef = format_chart_def_2.formatChartDef;
var ApexCharts = __webpack_require__(/*! apexcharts */ "apexcharts");
if (ApexCharts.default !== undefined) {
    ApexCharts = ApexCharts.default; // Bit of a hack here. It seems to be the only to get this work as a template and as a module.
}
//
// Wrapper for an ApexCharts chart.
//
var ApexChart = /** @class */ (function () {
    function ApexChart(chart) {
        this.chart = chart;
    }
    //
    // Unmount the chart.
    //
    ApexChart.prototype.unmount = function () {
        if (this.chart) {
            this.chart.destroy();
            this.chart = undefined;
        }
    };
    //
    // Size the chart to fit its container.
    //
    ApexChart.prototype.sizeToFit = function () {
        if (this.chart) {
            //todo: this.chart.resize();
        }
    };
    return ApexChart;
}());
//
// Mount the chart on the DOM element.
//
function mountChart(chartDef, domElement, chartOptions) {
    return __awaiter(this, void 0, void 0, function () {
        var apexChartDef, apexChart;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    apexChartDef = format_chart_def_1.formatChartDef(chartDef);
                    if (!apexChartDef.chart) {
                        apexChartDef.chart = {};
                    }
                    if (!apexChartDef.chart.animations) {
                        apexChartDef.chart.animations = {};
                    }
                    if (!apexChartDef.tooltip) {
                        apexChartDef.tooltip = {};
                    }
                    if (!apexChartDef.chart.zoom) {
                        apexChartDef.chart.zoom = {};
                    }
                    if (!apexChartDef.chart.toolbar) {
                        apexChartDef.chart.toolbar = {};
                    }
                    if (chartOptions && chartOptions.makeStatic) {
                        apexChartDef.chart.animations.enabled = false;
                        apexChartDef.tooltip.enabled = false;
                        apexChartDef.chart.zoom.enabled = false;
                        apexChartDef.chart.toolbar.show = false;
                    }
                    else {
                        apexChartDef.chart.animations.enabled = true;
                        apexChartDef.tooltip.enabled = true;
                        apexChartDef.chart.zoom.enabled = true;
                        apexChartDef.chart.toolbar.show = true;
                    }
                    if (chartOptions && chartOptions.showChartDef) {
                        console.log("Formatted chart definition:");
                        console.log(JSON.stringify(apexChartDef, null, 4));
                    }
                    apexChart = new ApexCharts(domElement, apexChartDef);
                    return [4 /*yield*/, apexChart.render()];
                case 1:
                    _a.sent();
                    return [2 /*return*/, new ApexChart(apexChart)];
            }
        });
    });
}
exports.mountChart = mountChart;


/***/ }),

/***/ "./src/lib/format-chart-def.ts":
/*!*************************************!*\
  !*** ./src/lib/format-chart-def.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var dayjs = __webpack_require__(/*! dayjs */ "dayjs");
var numeral = __webpack_require__(/*! numeral */ "numeral");
//
// Pluck a single named series from chart data.
//
function pluckValues(columnName, values) {
    return values.map(function (row) { return row[columnName]; });
}
//
// Build a series for Apex cahrts.
//
function buildApexSeries(columnName, values, indexValues) {
    return pluckValues(columnName, values)
        .map(function (yValue, index) { return ({ x: indexValues[index], y: yValue }); });
}
//
// Extract series from the chart definition's data.
//
function extractSeries(data, axises, xAxis) {
    return axises.map(function (seriesConfig) {
        var columnName = seriesConfig.series;
        var xAxisColumnName = seriesConfig.x && seriesConfig.x.series || xAxis && xAxis.series;
        var xAxisValues = xAxisColumnName ? pluckValues(xAxisColumnName, data.values) : data.index.values;
        return {
            name: columnName,
            data: buildApexSeries(columnName, data.values, xAxisValues),
        };
    });
}
//
// Get the configuration Y axis for apex.
//
function extractYAxisConfiguration(seriesConfigs, axisConfig, opposite, data) {
    var show = true;
    return seriesConfigs.map(function (seriesConfig) {
        var yAxisConfig = {
            opposite: opposite,
            show: show,
            min: axisConfig.min,
            max: axisConfig.max,
            labels: {},
        };
        var formatString = axisConfig.format;
        var columnName = seriesConfig.series;
        var dataType = data.columns[columnName];
        if (formatString) {
            if (dataType === "date") {
                yAxisConfig.labels.formatter = function (value) { return dayjs(value).format(formatString); };
            }
            else if (dataType === "number") {
                yAxisConfig.labels.formatter = function (value) { return numeral(value).format(formatString); };
            }
        }
        else {
            if (dataType === "number") {
                yAxisConfig.labels.formatter = function (value) { return numeral(value).format("0.00"); }; // Default to formatting with two decimal places for numeric data with no format string.
            }
        }
        show = false;
        return yAxisConfig;
    });
}
//
// Determine the Apex type to use for the x axis.
//
function determineXAxisType(inputChartDef) {
    var dataType = inputChartDef.axisMap.x
        && inputChartDef.axisMap.x.series
        && inputChartDef.data.columns[inputChartDef.axisMap.x.series]
        || inputChartDef.data.index.type;
    if (dataType === "date") {
        return "datetime";
    }
    else if (dataType === "number") {
        return "numeric";
    }
    else {
        return "category";
    }
}
/**
 * Convert a data-forge-plot chart definition to an ApexCharts chart definition.
 */
function formatChartDef(inputChartDef) {
    //todo: use the serialization library to deserialize the chart def here!
    var xaxisType = determineXAxisType(inputChartDef);
    var xaxis = {
        type: xaxisType,
        labels: {},
    };
    var xAxisFormatString = inputChartDef.plotConfig.x && inputChartDef.plotConfig.x.format;
    if (xAxisFormatString) {
        if (xaxisType === "datetime") {
            xaxis.labels.formatter = function (value) { return dayjs(value).format(xAxisFormatString); };
        }
        else if (xaxisType === "numeric") {
            xaxis.labels.formatter = function (value) { return numeral(value).format(xAxisFormatString); };
        }
    }
    else {
        if (xaxisType === "numeric") {
            xaxis.labels.formatter = function (value) { return numeral(value).format("0.00"); }; // Default to formatting with two decimal places for numeric data with no format string.
        }
    }
    var yAxisSeries = extractSeries(inputChartDef.data, inputChartDef.axisMap.y, inputChartDef.axisMap.x)
        .concat(extractSeries(inputChartDef.data, inputChartDef.axisMap.y2, inputChartDef.axisMap.x));
    var yAxisConfig = extractYAxisConfiguration(inputChartDef.axisMap.y, inputChartDef.plotConfig.y || {}, false, inputChartDef.data)
        .concat(extractYAxisConfiguration(inputChartDef.axisMap.y2, inputChartDef.plotConfig.y2 || {}, true, inputChartDef.data));
    return {
        chart: {
            type: inputChartDef.plotConfig.chartType,
            width: inputChartDef.plotConfig.width,
            height: inputChartDef.plotConfig.height,
        },
        stroke: {
            width: 1,
        },
        series: yAxisSeries,
        yaxis: yAxisConfig,
        xaxis: xaxis,
        dataLabels: {
            enabled: false,
        },
        legend: {
            show: inputChartDef.plotConfig.legend && inputChartDef.plotConfig.legend.show !== undefined
                ? inputChartDef.plotConfig.legend.show
                : true,
        },
    };
}
exports.formatChartDef = formatChartDef;


/***/ }),

/***/ "apexcharts":
/*!*****************************!*\
  !*** external "apexcharts" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("apexcharts");

/***/ }),

/***/ "dayjs":
/*!************************!*\
  !*** external "dayjs" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("dayjs");

/***/ }),

/***/ "numeral":
/*!**************************!*\
  !*** external "numeral" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("numeral");

/***/ })

/******/ })));
//# sourceMappingURL=index.js.map